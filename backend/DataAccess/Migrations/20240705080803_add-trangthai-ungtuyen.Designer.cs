// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240705080803_add-trangthai-ungtuyen")]
    partial class addtrangthaiungtuyen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.DTOs.ExampleDTO", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ExampleDTOs");
                });

            modelBuilder.Entity("Models.Entities.DangTuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChuyenNganh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoanhNghiepId")
                        .HasColumnType("int");

                    b.Property<int?>("HinhThucDangTuyenId")
                        .HasColumnType("int");

                    b.Property<string>("KhuVuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MucLuong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NhanVienKiemDuyetId")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenViTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThoiGianDangTuyen")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UuDaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoanhNghiepId");

                    b.HasIndex("HinhThucDangTuyenId");

                    b.HasIndex("NhanVienKiemDuyetId");

                    b.HasIndex("UuDaiId");

                    b.ToTable("DangTuyens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChuyenNganh = "IT",
                            DoanhNghiepId = 1,
                            HinhThucDangTuyenId = 1,
                            KhuVuc = "Hà Nội",
                            MoTa = "    - Phát triển ứng dụng web với các Javascript Framework AngularJS hoặc ReactJS kết hợp với API Server.\r\n\r\n    - Phát triển thêm tính năng mới hoặc cải tiến tính năng sẵn có trên ứng dụng web theo yêu cầu.\r\n\r\n    - Tích hợp các thư viện của Third Party vào ứng dụng web.\r\n\r\n    - Tối ưu hiệu suất ứng dụng nhằm đảm bảo tính tương thích trên tất cả các thiết bị và trình duyệt khác nhau.",
                            MucLuong = "10.000.000 - 15.000.000 VND",
                            NgayBatDau = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayDangKy = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2021, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 5,
                            TenViTri = "Lập trình viên",
                            ThoiGianDangTuyen = 30,
                            TrangThai = "Đang tuyển"
                        },
                        new
                        {
                            Id = 2,
                            ChuyenNganh = "Kế Toán",
                            DoanhNghiepId = 2,
                            HinhThucDangTuyenId = 2,
                            KhuVuc = "Hà Nội",
                            MoTa = "    - Thực hiện các công việc kế toán theo quy định của pháp luật.\r\n\r\n    - Lập báo cáo tài chính hàng quý, hàng năm.\r\n\r\n    - Lập bảng cân đối kế toán, bảng cân đối kế toán.\r\n\r\n    - Lập báo cáo thuế hàng quý, hàng năm.\r\n\r\n    - Thực hiện các công việc khác theo sự phân công của cấp trên.",
                            MucLuong = "5.000.000 - 7.000.000 VND",
                            NgayBatDau = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayDangKy = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2021, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 2,
                            TenViTri = "Kế toán",
                            ThoiGianDangTuyen = 30,
                            TrangThai = "Đang tuyển"
                        },
                        new
                        {
                            Id = 3,
                            ChuyenNganh = "Kinh Doanh",
                            DoanhNghiepId = 3,
                            HinhThucDangTuyenId = 3,
                            KhuVuc = "Hồ Chi Minh",
                            MoTa = "    - Tìm kiếm khách hàng tiềm năng.\r\n\r\n    - Tư vấn sản phẩm, dịch vụ cho khách hàng.\r\n\r\n    - Chăm sóc khách hàng hiện tại.\r\n\r\n    - Thực hiện các công việc khác theo sự phân công của cấp trên.",
                            MucLuong = "5.000.000 - 7.000.000 VND",
                            NgayBatDau = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayDangKy = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2021, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 3,
                            TenViTri = "Nhân viên kinh doanh",
                            ThoiGianDangTuyen = 30,
                            TrangThai = "Đang tuyển"
                        },
                        new
                        {
                            Id = 4,
                            ChuyenNganh = "Kinh Doanh",
                            DoanhNghiepId = 3,
                            HinhThucDangTuyenId = 3,
                            KhuVuc = "Hồ Chi Minh",
                            MoTa = "    - Tìm kiếm khách hàng tiềm năng.\r\n\r\n    - Tư vấn sản phẩm, dịch vụ cho khách hàng.\r\n\r\n    - Chăm sóc khách hàng hiện tại.\r\n\r\n    - Thực hiện các công việc khác theo sự phân công của cấp trên.",
                            MucLuong = "Thỏa thuận",
                            NgayBatDau = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayDangKy = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2021, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 3,
                            TenViTri = "Nhân viên kinh doanh",
                            ThoiGianDangTuyen = 30,
                            TrangThai = "Đang tuyển"
                        },
                        new
                        {
                            Id = 5,
                            ChuyenNganh = "Kinh Doanh",
                            DoanhNghiepId = 3,
                            HinhThucDangTuyenId = 3,
                            KhuVuc = "Hồ Chi Minh",
                            MoTa = "    - Tìm kiếm khách hàng tiềm năng.\r\n\r\n    - Tư vấn sản phẩm, dịch vụ cho khách hàng.\r\n\r\n    - Chăm sóc khách hàng hiện tại.\r\n\r\n    - Thực hiện các công việc khác theo sự phân công của cấp trên.",
                            MucLuong = "Thỏa thuận",
                            NgayBatDau = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayDangKy = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2021, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 3,
                            TenViTri = "Nhân viên kinh doanh",
                            ThoiGianDangTuyen = 30,
                            TrangThai = "Đang tuyển"
                        });
                });

            modelBuilder.Entity("Models.Entities.DoanhNghiep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSoThue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NhanVienDangKyId")
                        .HasColumnType("int");

                    b.Property<string>("TenDoanhNghiep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("XacNhan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienDangKyId");

                    b.ToTable("DoanhNghieps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DienThoai = "0123456789",
                            Email = "doanhnghiep@email.com",
                            MaSoThue = "123456",
                            MatKhau = "123456",
                            NgayDangKy = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenDoanhNghiep = "Cty TNHH ABC"
                        },
                        new
                        {
                            Id = 2,
                            DienThoai = "0123456789",
                            Email = "doanhnghiep2@email.com",
                            MaSoThue = "123456",
                            MatKhau = "123456",
                            NgayDangKy = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenDoanhNghiep = "Cty TNHH XYZ"
                        },
                        new
                        {
                            Id = 3,
                            DienThoai = "0123456789",
                            Email = "doanhnghiep3@email.com",
                            MaSoThue = "123456",
                            MatKhau = "123456",
                            NgayDangKy = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenDoanhNghiep = "Cty TNHH KLM"
                        });
                });

            modelBuilder.Entity("Models.Entities.DotThanhToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HinhThucThanhToanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NhanVienThanhToanId")
                        .HasColumnType("int");

                    b.Property<int>("SoTien")
                        .HasColumnType("int");

                    b.Property<int>("ThanhToanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HinhThucThanhToanId");

                    b.HasIndex("NhanVienThanhToanId");

                    b.HasIndex("ThanhToanId");

                    b.ToTable("DotThanhToans");
                });

            modelBuilder.Entity("Models.Entities.HinhThucDangTuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHinhThuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HinhThucDangTuyens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MoTa = "Đăng tuyển qua báo giấy",
                            TenHinhThuc = "Báo Giấy"
                        },
                        new
                        {
                            Id = 2,
                            MoTa = "Đăng tuyển qua website công ty",
                            TenHinhThuc = "Website Công Ty"
                        },
                        new
                        {
                            Id = 3,
                            MoTa = "Đăng tuyển qua các banner quảng cáo",
                            TenHinhThuc = "Banner Quảng cáo"
                        });
                });

            modelBuilder.Entity("Models.Entities.HinhThucThanhToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHinhThuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HinhThucThanhToans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MoTa = "Thanh toán qua chuyển khoản",
                            TenHinhThuc = "Chuyển khoản"
                        },
                        new
                        {
                            Id = 2,
                            MoTa = "Thanh toán bằng tiền mặt",
                            TenHinhThuc = "Tiền mặt"
                        });
                });

            modelBuilder.Entity("Models.Entities.HoSoUngTuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileHoSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHoSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UngTuyenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UngTuyenId");

                    b.ToTable("HoSoUngTuyens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileHoSo = "example.pdf",
                            MoTa = "CV",
                            TenHoSo = "CV",
                            UngTuyenId = 1
                        },
                        new
                        {
                            Id = 2,
                            FileHoSo = "example.pdf",
                            MoTa = "CV",
                            TenHoSo = "CV",
                            UngTuyenId = 2
                        },
                        new
                        {
                            Id = 3,
                            FileHoSo = "example.pdf",
                            MoTa = "CV",
                            TenHoSo = "CV",
                            UngTuyenId = 3
                        },
                        new
                        {
                            Id = 4,
                            FileHoSo = "example.pdf",
                            MoTa = "CV",
                            TenHoSo = "CV",
                            UngTuyenId = 4
                        },
                        new
                        {
                            Id = 5,
                            FileHoSo = "example.pdf",
                            MoTa = "CV",
                            TenHoSo = "CV",
                            UngTuyenId = 5
                        },
                        new
                        {
                            Id = 6,
                            FileHoSo = "example.pdf",
                            MoTa = "CV",
                            TenHoSo = "CV",
                            UngTuyenId = 6
                        },
                        new
                        {
                            Id = 7,
                            FileHoSo = "example.pdf",
                            MoTa = "CV",
                            TenHoSo = "CV",
                            UngTuyenId = 7
                        },
                        new
                        {
                            Id = 8,
                            FileHoSo = "example.pdf",
                            MoTa = "CV",
                            TenHoSo = "CV",
                            UngTuyenId = 8
                        },
                        new
                        {
                            Id = 9,
                            FileHoSo = "example.pdf",
                            MoTa = "CV",
                            TenHoSo = "CV",
                            UngTuyenId = 9
                        });
                });

            modelBuilder.Entity("Models.Entities.NhanVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnhDaiDien = "example.jpg",
                            Email = "nhanvien@email.com",
                            MatKhau = "123456",
                            TenNhanVien = "Nguyễn Văn B"
                        });
                });

            modelBuilder.Entity("Models.Entities.ThanhToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DaThanhToan")
                        .HasColumnType("bit");

                    b.Property<int>("DangTuyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HanThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HinhThucThanhToanId")
                        .HasColumnType("int");

                    b.Property<int>("SoTien")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DangTuyenId");

                    b.HasIndex("HinhThucThanhToanId");

                    b.ToTable("ThanhToans");
                });

            modelBuilder.Entity("Models.Entities.TieuChiTuyenDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DangTuyenId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTieuChi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DangTuyenId");

                    b.ToTable("TieuChiTuyenDungs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DangTuyenId = 1,
                            MoTa = "30 Năm kinh nghiệm làm việc trong lĩnh vực lập trình",
                            TenTieuChi = "Kinh Nghiệm Làm Việc"
                        },
                        new
                        {
                            Id = 2,
                            DangTuyenId = 2,
                            MoTa = "Có kiến thức vững về kế toán",
                            TenTieuChi = "Kỹ năng kế toán"
                        },
                        new
                        {
                            Id = 3,
                            DangTuyenId = 3,
                            MoTa = "Có kiến thức vững về kinh doanh",
                            TenTieuChi = "Kỹ năng kinh doanh"
                        },
                        new
                        {
                            Id = 4,
                            DangTuyenId = 4,
                            MoTa = "Có kiến thức vững về kinh doanh",
                            TenTieuChi = "Kỹ năng kinh doanh"
                        },
                        new
                        {
                            Id = 5,
                            DangTuyenId = 5,
                            MoTa = "Có kiến thức vững về kinh doanh",
                            TenTieuChi = "Kỹ năng kinh doanh"
                        },
                        new
                        {
                            Id = 6,
                            DangTuyenId = 1,
                            MoTa = "20-25 tuổi",
                            TenTieuChi = "Độ tuổi"
                        },
                        new
                        {
                            Id = 7,
                            DangTuyenId = 2,
                            MoTa = "20-25 tuổi",
                            TenTieuChi = "Độ tuổi"
                        },
                        new
                        {
                            Id = 8,
                            DangTuyenId = 3,
                            MoTa = "20-25 tuổi",
                            TenTieuChi = "Độ tuổi"
                        },
                        new
                        {
                            Id = 9,
                            DangTuyenId = 4,
                            MoTa = "20-25 tuổi",
                            TenTieuChi = "Độ tuổi"
                        },
                        new
                        {
                            Id = 10,
                            DangTuyenId = 5,
                            MoTa = "20-25 tuổi",
                            TenTieuChi = "Độ tuổi"
                        },
                        new
                        {
                            Id = 11,
                            DangTuyenId = 1,
                            MoTa = "Đại học",
                            TenTieuChi = "Trình độ học vấn"
                        },
                        new
                        {
                            Id = 12,
                            DangTuyenId = 2,
                            MoTa = "Đại học",
                            TenTieuChi = "Trình độ học vấn"
                        },
                        new
                        {
                            Id = 13,
                            DangTuyenId = 3,
                            MoTa = "Đại học",
                            TenTieuChi = "Trình độ học vấn"
                        },
                        new
                        {
                            Id = 14,
                            DangTuyenId = 4,
                            MoTa = "Đại học",
                            TenTieuChi = "Trình độ học vấn"
                        },
                        new
                        {
                            Id = 15,
                            DangTuyenId = 5,
                            MoTa = "Đại học",
                            TenTieuChi = "Trình độ học vấn"
                        });
                });

            modelBuilder.Entity("Models.Entities.UngTuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DangTuyenId")
                        .HasColumnType("int");

                    b.Property<string>("DanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayUngTuyen")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NhanVienKiemDuyenId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UngVienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DangTuyenId");

                    b.HasIndex("NhanVienKiemDuyenId");

                    b.HasIndex("UngVienId");

                    b.ToTable("UngTuyens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DangTuyenId = 1,
                            NgayUngTuyen = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NhanVienKiemDuyenId = 1,
                            TrangThai = "",
                            UngVienId = 2
                        },
                        new
                        {
                            Id = 2,
                            DangTuyenId = 2,
                            NgayUngTuyen = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NhanVienKiemDuyenId = 1,
                            TrangThai = "",
                            UngVienId = 2
                        },
                        new
                        {
                            Id = 3,
                            DangTuyenId = 3,
                            NgayUngTuyen = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NhanVienKiemDuyenId = 1,
                            TrangThai = "",
                            UngVienId = 2
                        },
                        new
                        {
                            Id = 4,
                            DangTuyenId = 4,
                            NgayUngTuyen = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NhanVienKiemDuyenId = 1,
                            TrangThai = "",
                            UngVienId = 2
                        },
                        new
                        {
                            Id = 5,
                            DangTuyenId = 5,
                            NgayUngTuyen = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NhanVienKiemDuyenId = 1,
                            TrangThai = "",
                            UngVienId = 2
                        },
                        new
                        {
                            Id = 6,
                            DangTuyenId = 1,
                            NgayUngTuyen = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NhanVienKiemDuyenId = 1,
                            TrangThai = "",
                            UngVienId = 3
                        },
                        new
                        {
                            Id = 7,
                            DangTuyenId = 2,
                            NgayUngTuyen = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NhanVienKiemDuyenId = 1,
                            TrangThai = "",
                            UngVienId = 3
                        },
                        new
                        {
                            Id = 8,
                            DangTuyenId = 3,
                            NgayUngTuyen = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NhanVienKiemDuyenId = 1,
                            TrangThai = "",
                            UngVienId = 3
                        },
                        new
                        {
                            Id = 9,
                            DangTuyenId = 4,
                            NgayUngTuyen = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NhanVienKiemDuyenId = 1,
                            TrangThai = "",
                            UngVienId = 3
                        });
                });

            modelBuilder.Entity("Models.Entities.UngVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrinhDoChuyenMon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrinhDoHocVan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UngViens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnhDaiDien = "example.jpg",
                            Cv = "example.jpg",
                            DiaChi = "Hà Nội",
                            Email = "ungvien@email.com",
                            HoTen = "Nguyễn Văn A",
                            MatKhau = "123456",
                            NgaySinh = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "0123456789",
                            TrinhDoChuyenMon = "CNTT",
                            TrinhDoHocVan = "Đại học FPT"
                        },
                        new
                        {
                            Id = 2,
                            AnhDaiDien = "example.jpg",
                            Cv = "example.jpg",
                            DiaChi = "Hà Nội",
                            Email = "ungvien2@email.com",
                            HoTen = "Nguyễn Văn B",
                            MatKhau = "123456",
                            NgaySinh = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "0123456789",
                            TrinhDoChuyenMon = "CNTT",
                            TrinhDoHocVan = "Đại học FPT"
                        },
                        new
                        {
                            Id = 3,
                            AnhDaiDien = "example.jpg",
                            Cv = "example.jpg",
                            DiaChi = "Hà Nội",
                            Email = "ungvien3@email.com",
                            HoTen = "Nguyễn Văn C",
                            MatKhau = "123456",
                            NgaySinh = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "0123456789",
                            TrinhDoChuyenMon = "CNTT",
                            TrinhDoHocVan = "Đại học FPT"
                        });
                });

            modelBuilder.Entity("Models.Entities.UuDai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoanhNghiepId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoanhNghiepId");

                    b.ToTable("UuDais");
                });

            modelBuilder.Entity("Models.Entities.DangTuyen", b =>
                {
                    b.HasOne("Models.Entities.DoanhNghiep", "DoanhNghiep")
                        .WithMany("DangTuyens")
                        .HasForeignKey("DoanhNghiepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entities.HinhThucDangTuyen", "HinhThucDangTuyen")
                        .WithMany("DangTuyens")
                        .HasForeignKey("HinhThucDangTuyenId");

                    b.HasOne("Models.Entities.NhanVien", "NhanVienKiemDuyet")
                        .WithMany()
                        .HasForeignKey("NhanVienKiemDuyetId");

                    b.HasOne("Models.Entities.UuDai", "UuDai")
                        .WithMany("DangTuyens")
                        .HasForeignKey("UuDaiId");

                    b.Navigation("DoanhNghiep");

                    b.Navigation("HinhThucDangTuyen");

                    b.Navigation("NhanVienKiemDuyet");

                    b.Navigation("UuDai");
                });

            modelBuilder.Entity("Models.Entities.DoanhNghiep", b =>
                {
                    b.HasOne("Models.Entities.NhanVien", "NhanVienDangKy")
                        .WithMany()
                        .HasForeignKey("NhanVienDangKyId");

                    b.Navigation("NhanVienDangKy");
                });

            modelBuilder.Entity("Models.Entities.DotThanhToan", b =>
                {
                    b.HasOne("Models.Entities.HinhThucThanhToan", "HinhThucThanhToan")
                        .WithMany()
                        .HasForeignKey("HinhThucThanhToanId");

                    b.HasOne("Models.Entities.NhanVien", "NhanVienThanhToan")
                        .WithMany()
                        .HasForeignKey("NhanVienThanhToanId");

                    b.HasOne("Models.Entities.ThanhToan", "ThanhToan")
                        .WithMany("DotThanhToans")
                        .HasForeignKey("ThanhToanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HinhThucThanhToan");

                    b.Navigation("NhanVienThanhToan");

                    b.Navigation("ThanhToan");
                });

            modelBuilder.Entity("Models.Entities.HoSoUngTuyen", b =>
                {
                    b.HasOne("Models.Entities.UngTuyen", "UngTuyen")
                        .WithMany("HoSoUngTuyens")
                        .HasForeignKey("UngTuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UngTuyen");
                });

            modelBuilder.Entity("Models.Entities.ThanhToan", b =>
                {
                    b.HasOne("Models.Entities.DangTuyen", "DangTuyen")
                        .WithMany("ThanhToans")
                        .HasForeignKey("DangTuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entities.HinhThucThanhToan", null)
                        .WithMany("ThanhToans")
                        .HasForeignKey("HinhThucThanhToanId");

                    b.Navigation("DangTuyen");
                });

            modelBuilder.Entity("Models.Entities.TieuChiTuyenDung", b =>
                {
                    b.HasOne("Models.Entities.DangTuyen", "DangTuyen")
                        .WithMany("TieuChiTuyenDungs")
                        .HasForeignKey("DangTuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DangTuyen");
                });

            modelBuilder.Entity("Models.Entities.UngTuyen", b =>
                {
                    b.HasOne("Models.Entities.DangTuyen", "DangTuyen")
                        .WithMany("UngTuyens")
                        .HasForeignKey("DangTuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entities.NhanVien", "NhanVienKiemDuyen")
                        .WithMany()
                        .HasForeignKey("NhanVienKiemDuyenId");

                    b.HasOne("Models.Entities.UngVien", "UngVien")
                        .WithMany("UngTuyens")
                        .HasForeignKey("UngVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DangTuyen");

                    b.Navigation("NhanVienKiemDuyen");

                    b.Navigation("UngVien");
                });

            modelBuilder.Entity("Models.Entities.UuDai", b =>
                {
                    b.HasOne("Models.Entities.DoanhNghiep", "DoanhNghiep")
                        .WithMany()
                        .HasForeignKey("DoanhNghiepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoanhNghiep");
                });

            modelBuilder.Entity("Models.Entities.DangTuyen", b =>
                {
                    b.Navigation("ThanhToans");

                    b.Navigation("TieuChiTuyenDungs");

                    b.Navigation("UngTuyens");
                });

            modelBuilder.Entity("Models.Entities.DoanhNghiep", b =>
                {
                    b.Navigation("DangTuyens");
                });

            modelBuilder.Entity("Models.Entities.HinhThucDangTuyen", b =>
                {
                    b.Navigation("DangTuyens");
                });

            modelBuilder.Entity("Models.Entities.HinhThucThanhToan", b =>
                {
                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("Models.Entities.ThanhToan", b =>
                {
                    b.Navigation("DotThanhToans");
                });

            modelBuilder.Entity("Models.Entities.UngTuyen", b =>
                {
                    b.Navigation("HoSoUngTuyens");
                });

            modelBuilder.Entity("Models.Entities.UngVien", b =>
                {
                    b.Navigation("UngTuyens");
                });

            modelBuilder.Entity("Models.Entities.UuDai", b =>
                {
                    b.Navigation("DangTuyens");
                });
#pragma warning restore 612, 618
        }
    }
}
